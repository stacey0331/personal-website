{"ast":null,"code":"var _jsxFileName = \"/Users/Stacey/Desktop/personal-website/src/pages/ProjectPage.js\";\nimport React from 'react';\nimport portfolioProject from '../text/portfolio-project.js';\nimport NotFoundPage from './NotFoundPage';\nimport githubIcon from '../images/githubIcon.png';\nimport tarIcon from '../images/tarIcon.png';\n\nconst ProjectPage = ({\n  match\n}) => {\n  const name = match.params.name;\n  const project = portfolioProject.find(project => project.name === name);\n  let appExplained; // If the project is not found under the /portfooio endpoint\n\n  if (!project) return /*#__PURE__*/React.createElement(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 26\n    }\n  }); // Conditionally render the App epxlained video \n\n  if (project.vidLink) {\n    appExplained = /*#__PURE__*/React.createElement(\"iframe\", {\n      title: \"App Explained\",\n      width: \"560\",\n      height: \"315\",\n      src: project.vidLink,\n      frameborder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowfullscreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    });\n  } else {\n    appExplained = \"Oops! The author is still making this video :) watch videos in other projects\";\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, project.title), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"projectText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Project Info\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Author(s): \"), project.author, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Date: \"), project.date, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Technology used: \"), project.techUsed.map((tech, key) => /*#__PURE__*/React.createElement(\"span\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"tech\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), project.description, project.longDescription.map((paragraph, key) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }), paragraph)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  }, \"Download .tar file\", /*#__PURE__*/React.createElement(\"img\", {\n    class: \"buttonIcon\",\n    src: tarIcon,\n    alt: \" \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: project.githubLink ? 'githubButton' : 'unlinkedButton githubButton',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  }, \"View on GitHub\", /*#__PURE__*/React.createElement(\"img\", {\n    class: \"buttonIcon\",\n    src: githubIcon,\n    alt: \" \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 126\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"App Explained\"), appExplained), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }\n  }));\n};\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/Stacey/Desktop/personal-website/src/pages/ProjectPage.js"],"names":["React","portfolioProject","NotFoundPage","githubIcon","tarIcon","ProjectPage","match","name","params","project","find","appExplained","vidLink","title","author","date","techUsed","map","tech","key","description","longDescription","paragraph","githubLink"],"mappings":"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","sourcesContent":["import React from 'react';\nimport portfolioProject from '../text/portfolio-project.js'\nimport NotFoundPage from './NotFoundPage';\nimport githubIcon from '../images/githubIcon.png';\nimport tarIcon from '../images/tarIcon.png';\n\n\nconst ProjectPage = ({ match }) => {\n    const name = match.params.name;\n    const project = portfolioProject.find(project => project.name === name);\n    let appExplained;\n\n    // If the project is not found under the /portfooio endpoint\n    if (!project) return <NotFoundPage />\n\n    // Conditionally render the App epxlained video \n    if (project.vidLink) {\n        appExplained =  <iframe title=\"App Explained\" width=\"560\" height=\"315\" src={project.vidLink} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n    } else {\n        appExplained = \"Oops! The author is still making this video :) watch videos in other projects\"\n    }\n\n    return (\n        <>\n            <h1>{project.title}</h1>\n            \n            <p class=\"projectText\">\n                <h3>Project Info</h3>\n                <span class=\"fields\">Author(s): </span>{project.author} \n                <br/>\n                <span class=\"fields\">Date: </span>{project.date}\n                <br/>\n                <span class=\"fields\">Technology used: </span>\n                {project.techUsed.map((tech, key) => (\n                    <span key={key}>tech</span>\n                ))}\n                \n                <br/>\n                <span class=\"fields\">Description: </span>\n                <br />\n                {project.description}\n                {project.longDescription.map((paragraph, key) => (\n                    <><br />{paragraph}</>\n                ))}\n                <br/><br/><button>Download .tar file<img class=\"buttonIcon\" src={tarIcon} alt=\" \"/></button>\n                <br/><br/><button class={project.githubLink ? 'githubButton' : 'unlinkedButton githubButton' }>View on GitHub<img class=\"buttonIcon\" src={githubIcon} alt=\" \"/></button>\n\n                <h2>App Explained</h2>\n                {appExplained}\n            </p>\n            <br /><br /><br /><br />\n        </>\n    )\n};\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}